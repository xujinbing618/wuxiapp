/*package com.magus.enviroment.ep.fragment.attention;import android.content.Intent;import android.os.Bundle;import android.util.Log;import android.view.LayoutInflater;import android.view.View;import android.view.ViewGroup;import android.view.animation.Animation;import android.view.animation.AnimationUtils;import android.view.animation.LayoutAnimationController;import android.widget.AdapterView;import android.widget.LinearLayout;import android.widget.ListView;import com.magus.enviroment.R;import com.magus.enviroment.ep.MyApplication;import com.magus.enviroment.ep.activity.attention.AttentionDetailContentActivity;import com.magus.enviroment.ep.adapter.AttentionDetailAdapter;import com.magus.enviroment.ep.base.BaseFragment;import com.magus.enviroment.ep.bean.AlarmDetailInfo;import com.magus.enviroment.ep.callback.RequestCallBack;import com.magus.enviroment.ep.constant.SpKeyConstant;import com.magus.enviroment.ep.constant.URLConstant;import com.magus.magusutils.ContextUtil;import com.magus.magusutils.SharedPreferenceUtil;import com.magus.pulltorefresh.PullToRefreshBase;import com.magus.pulltorefresh.PullToRefreshListView;import com.magus.volley.Request;import com.magus.volley.Response;import com.magus.volley.VolleyError;import com.magus.volley.toolbox.StringRequest;import java.util.ArrayList;import java.util.List;*//** * 异常详情 * Created by pau * Packagename com.magus.enviroment.ep.fragment.attention * 2015-15/5/10-上午9:44. *//*public class DetailFragment extends BaseFragment implements AdapterView.OnItemClickListener {    private static final String TAG="DetailFragment";    private View mRootView;    private PullToRefreshListView mDetailListView;    private List<AlarmDetailInfo> mAlarmDetailList = new ArrayList<AlarmDetailInfo>();    private AttentionDetailAdapter mAdapter;    private String mStartPosition = "0";    private String firstStartRecord = "0";    private LinearLayout mFailPage;    private LinearLayout mLoadingPage;    @Override    public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {        if (mRootView == null) {            mRootView = inflater.inflate(R.layout.fragment_attention_detail, null);            initData();            initView();        }        ViewGroup parent = (ViewGroup) mRootView.getParent();        if (parent != null) {            parent.removeView(mRootView);        }        return mRootView;    }    @Override    public void onActivityCreated(Bundle savedInstanceState) {        super.onActivityCreated(savedInstanceState);    }    private void initData(){        mFailPage = (LinearLayout) mRootView.findViewById(R.id.ll_fail_page);        mLoadingPage = (LinearLayout) mRootView.findViewById(R.id.ll_loading_now);        mFailPage.setOnClickListener(new View.OnClickListener() {            @Override            public void onClick(View v) {                mLoadingPage.setVisibility(View.VISIBLE);                mFailPage.setVisibility(View.GONE);                sendRequest(firstStartRecord, false);            }        });        List<AlarmDetailInfo> list = (List<AlarmDetailInfo>) SharedPreferenceUtil.getObject(SpKeyConstant.ALARM_DETAIL_LIST,ContextUtil.getContext());        if (list!=null) {            mAlarmDetailList = list;        }else {            mLoadingPage.setVisibility(View.VISIBLE);        }    }    private void initView() {        mDetailListView = (PullToRefreshListView) mRootView.findViewById(R.id.attention_detail_list);        mAdapter = new AttentionDetailAdapter(mActivity, mAlarmDetailList);        mDetailListView.setAdapter(mAdapter);        mDetailListView.setOnItemClickListener(this);        mDetailListView.setOnRefreshListener(new PullToRefreshBase.OnRefreshListener2<ListView>() {            @Override            public void onPullDownToRefresh(PullToRefreshBase<ListView> pullToRefreshBase) {                sendRequest(firstStartRecord, false);            }            @Override            public void onPullUpToRefresh(PullToRefreshBase<ListView> pullToRefreshBase) {                sendRequest(mStartPosition, true);            }        });        sendRequest(firstStartRecord, false);    }    *//**     * 请求     *     * @param position    请求位置     * @param isUpRefresh 是否上啦刷新     *//*    private void sendRequest(String position, final boolean isUpRefresh) {        String url =URLConstant.HEAD_URL+ URLConstant.URL_ALARM_DETAIL_LIST + "?userId=" + MyApplication.mUid + "&roleId=" + MyApplication.mRoleId + "&start=" + position;        StringRequest request = new StringRequest(Request.Method.GET, url, new Response.Listener<String>() {            @Override            public void onResponse(String response) {                parseResponse(response, isUpRefresh);            }        }, new Response.ErrorListener() {            @Override            public void onErrorResponse(VolleyError error) {                mDetailListView.onRefreshComplete();                mFailPage.setVisibility(View.VISIBLE);                mLoadingPage.setVisibility(View.GONE);            }        });        MyApplication.getRequestQueue().add(request);    }    private void parseResponse(String response, final boolean isUpRefresh) {        AlarmDetailInfo.parseAlarmDetailInfo(response, new RequestCallBack() {            @Override            public void onSuccess(List<?> list, int startRecord) {                super.onSuccess(list);                mStartPosition = "" + (startRecord + 20);                //如果上啦刷新则加入更多                if (isUpRefresh) {                    mAlarmDetailList.addAll((List<AlarmDetailInfo>) list);                } else {                    mAlarmDetailList = (List<AlarmDetailInfo>) list;                    SharedPreferenceUtil.saveObject(SpKeyConstant.ALARM_DETAIL_LIST, ContextUtil.getContext(),mAlarmDetailList);                }                mLoadingPage.setVisibility(View.GONE);                mAdapter.setList(mAlarmDetailList);                mDetailListView.onRefreshComplete();            }            @Override            public void onFailed() {                super.onFailed();                mDetailListView.onRefreshComplete();            }        }, mActivity);    }    @Override    public void onItemClick(AdapterView<?> parent, View view, int position, long id) {        Log.e(TAG, "position=" + position);        AlarmDetailInfo info = mAlarmDetailList.get(position-1);        Intent intent = new Intent();        intent.setClass(mActivity, AttentionDetailContentActivity.class);        Bundle bundle = new Bundle();        bundle.putString(AttentionDetailContentActivity.KEY_FACILITY_BASEID,info.getFacilityBasId());        bundle.putString(AttentionDetailContentActivity.KEY_ALARM_TIME,info.getAlarmTime());        bundle.putString(AttentionDetailContentActivity.KEY_ALARMCODE,info.getAlarmCode());        bundle.putString(AttentionDetailContentActivity.KEY_FACILITY_NAME,info.getFacilityName());        bundle.putString(AttentionDetailContentActivity.KEY_STATUS,info.getDealStatus());        intent.putExtras(bundle);        startActivity(intent);    }    private void ListAnim() {        //通过加载XML动画设置文件来创建一个Animation对象；        Animation animation = AnimationUtils.loadAnimation(getActivity(), R.anim.list_view_animation);        //得到一个LayoutAnimationController对象；        LayoutAnimationController lac = new LayoutAnimationController(animation);        //设置控件显示的顺序；        lac.setOrder(LayoutAnimationController.ORDER_NORMAL);        //设置控件显示间隔时间；        lac.setDelay(1);        //为ListView设置LayoutAnimationController属性；        mDetailListView.setLayoutAnimation(lac);    }}*/